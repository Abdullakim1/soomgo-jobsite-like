-- Create the job_applications table
create table job_applications (
  id bigint generated by default as identity primary key,
  job_id bigint not null references public.jobs(id) on delete cascade,
  instructor_id uuid not null references public.profiles(id) on delete cascade,
  status text default 'pending' not null check (status in ('pending', 'accepted', 'rejected')),
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique(job_id, instructor_id) -- An instructor can only apply to a job once
);

-- Set up Row Level Security
alter table job_applications enable row level security;

create policy "Instructors can insert their own applications." on job_applications
  for insert with check (
    auth.uid() = instructor_id and 
    (select role from profiles where id = auth.uid()) = 'instructor' and
    (select status from jobs where id = job_id) = 'open'
  );

create policy "Instructors can view their own applications." on job_applications
  for select using (auth.uid() = instructor_id);

create policy "Companies can view applications for their jobs." on job_applications
  for select using (
    (select role from profiles where id = auth.uid()) = 'company' and
    job_id in (select id from jobs where company_id = auth.uid())
  );
