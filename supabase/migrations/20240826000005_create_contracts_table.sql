-- Create a new ENUM type for contract status
CREATE TYPE public.contract_status AS ENUM ('offered', 'signed', 'completed', 'paid', 'cancelled');

-- Create the contracts table
CREATE TABLE public.contracts (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  job_id BIGINT REFERENCES public.jobs(id) ON DELETE CASCADE NOT NULL,
  instructor_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  company_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  budget NUMERIC NOT NULL,
  status public.contract_status DEFAULT 'offered' NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  signed_at TIMESTAMPTZ
);

-- Enable Row Level Security
ALTER TABLE public.contracts ENABLE ROW LEVEL SECURITY;

-- RLS Policies for contracts
-- The involved instructor and company can view the contract
CREATE POLICY "Involved parties can view contracts" ON public.contracts
  FOR SELECT USING (auth.uid() = instructor_id OR auth.uid() = company_id);

-- The instructor can update the contract to sign it
CREATE POLICY "Instructors can sign contracts" ON public.contracts
  FOR UPDATE USING (auth.uid() = instructor_id) WITH CHECK (status = 'signed');

-- The company can update the contract to mark it as completed or paid
CREATE POLICY "Companies can update contract status" ON public.contracts
  FOR UPDATE USING (auth.uid() = company_id) WITH CHECK (status IN ('completed', 'paid', 'cancelled'));

-- Ensure that a job can only have one signed contract
CREATE UNIQUE INDEX on_one_signed_contract_per_job ON public.contracts (job_id) WHERE status = 'signed';
