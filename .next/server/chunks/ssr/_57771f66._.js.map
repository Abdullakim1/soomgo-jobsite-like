{"version":3,"sources":["turbopack:///[project]/src/app/dashboard/contracts/contract-actions.tsx","turbopack:///[project]/src/app/dashboard/contracts/leave-review.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport { type User } from '@supabase/supabase-js';\nimport LeaveReview from './leave-review';\n\nexport default function ContractActions({ contract, user }: { contract: any, user: User }) {\n  const supabase = createClient();\n  const [currentStatus, setCurrentStatus] = useState(contract.status);\n  const [hasReview, setHasReview] = useState(contract.reviews[0]?.count > 0);\n  const [loading, setLoading] = useState(false);\n\n  const signContract = async () => {\n    setLoading(true);\n    try {\n      const { error } = await supabase\n        .from('contracts')\n        .update({ status: 'signed', signed_at: new Date().toISOString() })\n        .eq('id', contract.id);\n\n      if (error) throw error;\n\n      setCurrentStatus('signed');\n    } catch (error: any) {\n      console.error('Error signing contract:', error);\n      alert(`Failed to sign contract: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const redirectToCheckout = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/checkout_sessions', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ contractId: contract.id }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create checkout session.');\n      }\n\n      const { url } = await response.json();\n      window.location.href = url;\n\n    } catch (error: any) {\n      console.error('Error redirecting to checkout:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Instructor's view\n  if (user.id === contract.instructor_id) {\n    if (currentStatus === 'offered') {\n      return (\n        <button\n          onClick={signContract}\n          disabled={loading}\n          className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:bg-gray-400\"\n        >\n          Sign Contract\n        </button>\n      );\n    }\n    return <p className={`font-semibold capitalize ${currentStatus === 'paid' ? 'text-purple-600' : 'text-gray-600'}`}>{currentStatus}</p>;\n  }\n\n  // Company's view\n  if (user.id === contract.company_id) {\n    if (currentStatus === 'signed') {\n      return (\n        <button\n          onClick={redirectToCheckout}\n          disabled={loading}\n          className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700 disabled:bg-gray-400\"\n        >\n          Pay Now\n        </button>\n      );\n    }\n\n    if (currentStatus === 'paid' && !hasReview) {\n      return <LeaveReview contract={contract} onReviewSubmit={() => setHasReview(true)} />;\n    }\n\n    return <p className={`font-semibold capitalize ${currentStatus === 'paid' ? 'text-purple-600' : 'text-gray-600'}`}>{currentStatus}</p>;\n  }\n\n  return null;\n}\n","'use client';\n\nimport { useState } from 'react';\nimport { createClient } from '@/lib/supabase/client';\n\nexport default function LeaveReview({ contract, onReviewSubmit }: { contract: any, onReviewSubmit: () => void }) {\n  const supabase = createClient();\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const { error } = await supabase.from('reviews').insert({\n        contract_id: contract.id,\n        instructor_id: contract.instructor_id,\n        company_id: contract.company_id,\n        rating,\n        comment,\n      });\n\n      if (error) throw error;\n\n      onReviewSubmit(); // Notify parent to update UI\n      setShowForm(false);\n\n    } catch (error: any) {\n      console.error('Error submitting review:', error);\n      alert(`Failed to submit review: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!showForm) {\n    return (\n      <button\n        onClick={() => setShowForm(true)}\n        className=\"px-4 py-2 text-sm font-medium text-white bg-purple-600 rounded-md hover:bg-purple-700\"\n      >\n        Leave a Review\n      </button>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"p-4 bg-gray-50 rounded-lg\">\n      <h4 className=\"font-bold mb-2\">Leave a Review</h4>\n      <div className=\"mb-4\">\n        <label htmlFor=\"rating\" className=\"block text-sm font-medium text-gray-700\">Rating (1-5)</label>\n        <input\n          type=\"number\"\n          id=\"rating\"\n          min=\"1\"\n          max=\"5\"\n          value={rating}\n          onChange={(e) => setRating(parseInt(e.target.value, 10))}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n          required\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label htmlFor=\"comment\" className=\"block text-sm font-medium text-gray-700\">Comment</label>\n        <textarea\n          id=\"comment\"\n          rows={3}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n        />\n      </div>\n      <div className=\"flex justify-end space-x-2\">\n        <button type=\"button\" onClick={() => setShowForm(false)} className=\"px-4 py-2 text-sm text-gray-600\">Cancel</button>\n        <button type=\"submit\" disabled={loading} className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:bg-gray-400\">\n          Submit Review\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":"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"}